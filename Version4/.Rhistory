#Import the human latent space data
listHumanLatentSpace <- map(filesMLP_Human,
function(x){
suppressMessages(read_csv(x)) %>%
column_to_rownames("Region") %>%
as.matrix() %>%
t()
})
#Compute the latent space similarity matrices
listSimLatentSpace <- map2(listHumanLatentSpace, listMouseLatentSpace,
function(x1, x2){
m <- buildSimilarityMatrix(x1 = x1, x2 = x2)
m <- m[,match(listLabelsMouseReordered$Region67_reordered, colnames(m))]
m <- m[match(listLabelsHumanReordered$Region88_reordered, rownames(m)),]
})
names(listSimLatentSpace) <- str_c("MLP_v", 1:length(listSimLatentSpace))
rm(listMouseLatentSpace, listHumanLatentSpace)
?matrix
matMaxSim_Mouse <- matrix(0,
nrow = length(listLabelsMouseReordered$Region67_reordered),
ncol = length(listSimLatentSpace),
dimnames = list(listLabelsMouseReordered$Region67_reordered,
names(listSimLatentSpace)))
matMaxSim_Mouse[1:5,1:5]
matMaxSim_Human <- matrix(0,
nrow = length(listLabelsHumanReordered$Region88_reordered),
ncol = length(listSimLatentSpace),
dimnames = list(listLabelsHumanReordered$Region88_reordered,
names(listSimLatentSpace)))
for(l in 1:length(listSimLatentSpace)){
matMaxSim_Human[, l] <- apply(listSimLatentSpace[[l]], MARGIN = 1, FUN = max)
matMaxSim_Mouse[, l] <- apply(listSimLatentSpace[[l]], MARGIN = 2, FUN = max)
}
matMaxSim_Human %>%
as_tibble()
matMaxSim_Human %>%
as_tibble(rownames = "Region")
matMaxSim_Human %>%
as_tibble(rownames = "Region") %>%
pivot_longer(cols = -Region, names_to = "Data", values_to = "MaxSimilarity")
dfMaxSim_Human <- matMaxSim_Human %>%
as_tibble(rownames = "Region") %>%
pivot_longer(cols = -Region, names_to = "Data", values_to = "MaxSimilarity")
head(dfMaxSim_Human)
ggplot(filter(dfMaxSim_Human, Data == "MLP_v1"), aes(x = MaxSimilarity)) +
geom_histogram()
ggplot(filter(dfMaxSim_Human, Data == "MLP_v1"), aes(x = MaxSimilarity)) +
geom_density()
ggplot(filter(dfMaxSim_Human, Data %in% c("MLP_v1", "MLP_v2")), aes(x = MaxSimilarity, col = Data)) +
geom_density()
ggplot(dfMaxSim_Human, aes(x = MaxSimilarity, col = Data)) +
geom_density()
ggplot(filter(dfMaxSim_Human, Data %in% c("MLP_v1", "MLP_v2")), aes(x = MaxSimilarity, col = Data)) +
geom_density(guide = F)
ggplot(filter(dfMaxSim_Human, Data %in% c("MLP_v1", "MLP_v2")), aes(x = MaxSimilarity, col = Data)) +
geom_density(guides = F)
?geom_density
ggplot(filter(dfMaxSim_Human, Data %in% c("MLP_v1", "MLP_v2")), aes(x = MaxSimilarity, col = Data)) +
geom_density(show.legend = F)
ggplot(sample_n(dfMaxSim_Human, n = 10), aes(x = MaxSimilarity, col = Data)) +
geom_density(show.legend = F)
ggplot(sample_n(dfMaxSim_Human, size = 10), aes(x = MaxSimilarity, col = Data)) +
geom_density(show.legend = F)
?sample_n
sample(names(listSimLatentSpace), size = 10)
dfMaxSim_Human %>%
filter(Data = %in% sampleLatentSpace) %>%
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, col = Data)) +
geom_density(show.legend = F)
sampleLatentSpace <- sample(names(listSimLatentSpace), size = 10)
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, col = Data)) +
geom_density(show.legend = F)
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F)
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F) +
theme_bw()
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, y = ..count.., group = Data)) +
geom_density(show.legend = F) +
theme_bw()
?geom_density
sampleLatentSpace <- sample(names(listSimLatentSpace), size = 100)
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F) +
theme_bw()
sampleLatentSpace <- sample(names(listSimLatentSpace), size = 200)
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F) +
theme_bw()
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70") +
theme_bw()
dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace) %>%
ggplot(aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
ggplot(temp, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
sampleLatentSpace <- sample(names(listSimLatentSpace), size = 200)
temp <- dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace)
ggplot(temp, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
dfMaxSim_Mouse <- matMaxSim_Mouse %>%
as_tibble(rownames = "Region") %>%
pivot_longer(cols = -Region, names_to = "Data", values_to = "MaxSimilarity")
dfMaxSim_Mouse <- matMaxSim_Mouse %>%
as_tibble(rownames = "Region") %>%
pivot_longer(cols = -Region, names_to = "Data", values_to = "MaxSimilarity")
sampleLatentSpace <- sample(names(listSimLatentSpace), size = 200)
dfMaxSim_Human_Sample <- dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace)
dfMaxSim_Mouse_Sample <- dfMaxSim_Mouse %>%
filter(Data %in% sampleLatentSpace)
ggplot(dfMaxSim_Human_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
ggplot(dfMaxSim_Mouse_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
matMaxSim_Human[1:5,1:5]
t(matMaxSim_Human)[1:5,1:5]
dfMaxSim_Human <- matMaxSim_Human %>%
t() %>%
as_tibble(rownames = "Data") %>%
pivot_longer(cols = -Data, names_to = "Region", values_to = "MaxSimilarity")
head(dfMaxSim_Human)
dfMaxSim_Human <- matMaxSim_Human %>%
as_tibble(rownames = "Region") %>%
pivot_longer(cols = -Region, names_to = "Data", values_to = "MaxSimilarity")
dfMaxSim_Mouse <- matMaxSim_Mouse %>%
as_tibble(rownames = "Region") %>%
pivot_longer(cols = -Region, names_to = "Data", values_to = "MaxSimilarity")
sampleLatentSpace <- sample(names(listSimLatentSpace), size = 200)
dfMaxSim_Human_Sample <- dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace)
dfMaxSim_Mouse_Sample <- dfMaxSim_Mouse %>%
filter(Data %in% sampleLatentSpace)
ggplot(dfMaxSim_Human_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
ggplot(dfMaxSim_Mouse_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
ggplot(dfMaxSim_Human, aes(x = MaxSimilarity, group = Region)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
formals(geom_density)
ggplot(dfMaxSim_Human_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3,
size = 0.25) +
theme_bw()
ggplot(dfMaxSim_Mouse_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3,
size = 0.25) +
theme_bw()
ggplot(dfMaxSim_Mouse_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey50",
alpha = 0.3,
size = 0.25) +
theme_bw()
ggplot(dfMaxSim_Human_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "black",
alpha = 0.3,
size = 0.25) +
theme_bw()
ggplot(dfMaxSim_Human_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(show.legend = F,
col = "grey50",
alpha = 0.3,
size = 0.25) +
theme_bw()
dfMaxSim_Human_Sample
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data, col = Species)) +
geom_density()
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data, col = Species)) +
geom_density()
head(dfMaxSim_Compare_Sample)
dfMaxSim_Compare_Sample %>% group_by(Data, Species) %>% count
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data, colour = Species)) +
geom_density()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, colour = Species)) +
geom_density()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, col = Species), group = Data) +
geom_density()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, col = Species, group = Data)) +
geom_density()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, fill = Species, group = Data)) +
geom_density()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, ncol = 2)
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, nrow = 2)
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, nrow = 2) +
theme_bw()
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, nrow = 2) +
theme_bw()
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, nrow = 2) +
theme_bw()
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, nrow = 2) +
theme_bw()
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, nrow = 2) +
theme_bw()
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density() +
facet_wrap(~Species, nrow = 2) +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey70") +
facet_wrap(~Species, nrow = 2) +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50") +
facet_wrap(~Species, nrow = 2) +
theme_bw()
sampleLatentSpace <- sample(names(listSimLatentSpace), size = 250)
dfMaxSim_Human_Sample <- dfMaxSim_Human %>%
filter(Data %in% sampleLatentSpace)
dfMaxSim_Mouse_Sample <- dfMaxSim_Mouse %>%
filter(Data %in% sampleLatentSpace)
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
dfMaxSim_Compare_Sample <- bind_rows(dfMaxSim_Human_Sample %>%
mutate(Species = "Human"),
dfMaxSim_Mouse_Sample %>%
mutate(Species = "Mouse"))
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50") +
facet_wrap(~Species, nrow = 2) +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50",
alpha = 0.3) +
facet_wrap(~Species, nrow = 2) +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50",
alpha = 0.3) +
facet_wrap(~Species, nrow = 2) +
coord_cartesian(xlim = c(0.4, 1)) +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50",
alpha = 0.3) +
facet_wrap(~Species, nrow = 2) +
coord_cartesian(xlim = c(0.4, 1)) +
scale_x_continuous(breaks = seq(0, 1, by = 1)) +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50",
alpha = 0.3) +
facet_wrap(~Species, nrow = 2) +
coord_cartesian(xlim = c(0.4, 1)) +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50",
alpha = 0.3) +
facet_wrap(~Species, nrow = 2) +
coord_cartesian(xlim = c(0.4, 1)) +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
labs(x = "Maximal similarity",
y = "Density",
caption = "Each line is a latent space. 250 spaces sampled.")
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50",
alpha = 0.3) +
facet_wrap(~Species, nrow = 2) +
coord_cartesian(xlim = c(0.4, 1)) +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
labs(x = "Maximal similarity",
y = "Density",
caption = "Each line is a latent space. 250 spaces sampled.") +
theme_bw()
ggplot(dfMaxSim_Compare_Sample, aes(x = MaxSimilarity, group = Data)) +
geom_density(size = 0.25,
col = "grey50",
alpha = 0.3) +
facet_wrap(~Species, nrow = 2) +
coord_cartesian(xlim = c(0.4, 1)) +
scale_x_continuous(breaks = seq(0, 1, by = 0.1)) +
labs(x = "Maximal similarity",
y = "Density",
caption = "Each line is a latent space. 250 spaces sampled.") +
theme_bw()
ggplot(dfMaxSim_Mouse, aes(x = MaxSimilarity, group = Region)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
pruneAnatTree(treeMouse_67,
nodes = listLabelsMouseReordered$Region67_reordered,
method = "BelowNode")
treeMouse_67 <- Clone(treeMouse)
pruneAnatTree(treeMouse_67,
nodes = listLabelsMouseReordered$Region67_reordered,
method = "BelowNode")
treeMouse_67$Get("color_hex_triplet", filterFun = isLeaf)
treeMouse_67$Get("color_hex_triplet", filterFun = isLeaf) %>%
enframe(name = "Region", value = "Colour")
dfMaxSim_Mouse
dfColoursMouse <- treeMouse_67$Get("color_hex_triplet", filterFun = isLeaf) %>%
enframe(name = "Region", value = "Colour") %>%
mutate(Region = factor(Region, levels = listLabelsMouseReordered$Region67_reordered))
dfColoursMouse
dfColoursMouse <- treeMouse_67$Get("color_hex_triplet", filterFun = isLeaf) %>%
enframe(name = "Region", value = "Colour") %>%
mutate(Region = factor(Region, levels = listLabelsMouseReordered$Region67_reordered)) %>%
arrange(Region)
dfColoursMouse <- treeMouse_67$Get("color_hex_triplet", filterFun = isLeaf) %>%
enframe(name = "Region", value = "Colour") %>%
mutate(Region = factor(Region, levels = listLabelsMouseReordered$Region67_reordered)) %>%
arrange(Region) %>%
pull(Colour)
coloursMouse <- treeMouse_67$Get("color_hex_triplet", filterFun = isLeaf) %>%
enframe(name = "Region", value = "Colour") %>%
mutate(Region = factor(Region, levels = listLabelsMouseReordered$Region67_reordered)) %>%
arrange(Region) %>%
pull(Colour)
coloursMouse
ggplot(dfMaxSim_Mouse, aes(x = MaxSimilarity, col = Region)) +
geom_density(show.legend = F,
col = "grey70",
alpha = 0.3) +
theme_bw()
ggplot(dfMaxSim_Mouse, aes(x = MaxSimilarity, col = Region)) +
geom_density(show.legend = F,
# col = "grey70",
alpha = 0.3) +
theme_bw()
ggplot(dfMaxSim_Mouse, aes(x = MaxSimilarity, col = Region)) +
geom_density(show.legend = F,
# col = "grey70",
alpha = 0.3) +
scale_colour_manual(values = coloursMouse) +
theme_bw()
ggplot(dfMaxSim_Mouse, aes(x = MaxSimilarity, col = Region)) +
geom_density(show.legend = T,
# col = "grey70",
alpha = 0.3) +
scale_colour_manual(values = coloursMouse) +
theme_bw()
dfMaxSim_Mouse <- dfMaxSim_Mouse %>%
mutate(Region = factor(Region, levels = listLabelsMouseReordered$Region67_reordered))
ggplot(dfMaxSim_Mouse, aes(x = MaxSimilarity, col = Region)) +
geom_density(show.legend = T,
# col = "grey70",
alpha = 0.3) +
scale_colour_manual(values = coloursMouse) +
theme_bw()
ggplot(dfMaxSim_Mouse, aes(x = MaxSimilarity, col = Region)) +
geom_density(show.legend = F,
# col = "grey70",
alpha = 0.3) +
scale_colour_manual(values = coloursMouse) +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RMINC)
library(MRIcrotome)
pathGdRecon <- "/projects/schoi/IT_methods/IT_recon/Gd_recon"
pathMouseDirs <- list.files(pathGdRecon, full.names = T) %>%
str_subset("Gd[0-9]+_recon")
dfImagePaths <- expand_grid(DirectoryPath = pathMouseDirs,
ImagePath = character(20))
for(path in pathMouseDirs){
indDirectory <- dfImagePaths$DirectoryPath == path
dfImagePaths[indDirectory, "ImagePath"] <- list.files(path, full.names = T)
}
dfImagePaths <- dfImagePaths %>%
mutate(Directory = str_extract(DirectoryPath, "Gd[0-9]+_recon"),
Image = str_extract(ImagePath, "img.*mnc"),
Timepoint = as.numeric(str_remove(str_extract(Image, "_[0-9]+"), "_")))
dirs <- dfImagePaths %>%
pull(Directory) %>%
unique()
# i <- which(dirs == "Gd24_recon")
dfCurrentMouse <- dfImagePaths %>%
filter(Directory == "Gd24_recon")
fileImage19 <- dfCurrentMouse %>%
filter(Timepoint == 19) %>%
pull(ImagePath)
volImage19 <- mincGetVolume(fileImage19)
intensityMax <- max(volImage19)
volImage19 <- volImage19/intensityMax
mask <- volImage19 >= 0.5
intensityMatrix <- matrix(0, nrow = sum(mask), ncol = nrow(dfCurrentMouse),
dimnames = list(str_c("V", 1:sum(mask)),
dfCurrentMouse$Image))
for(j in 1:nrow(dfCurrentMouse)){
vol <- mincGetVolume(dfCurrentMouse$ImagePath[j])
vol <- vol/intensityMax
intensityMatrix[, j] <- vol[mask]
}
voxelSample <- sample(x = 1:nrow(intensityMatrix), size = 500, replace = F)
dfIntensity <- intensityMatrix[voxelSample,] %>%
as_tibble(rownames = "VoxelID") %>%
pivot_longer(cols = -VoxelID, names_to = "Image", values_to = "Intensity") %>%
mutate(Timepoint = str_extract(Image, "_[0-9]+"),
Timepoint = str_remove(Timepoint, "_"),
Timepoint = as.numeric(Timepoint))
ggplot(dfIntensity, aes(x = Timepoint, y = Intensity, group = VoxelID)) +
geom_line(size = 0.05) +
theme_bw()
?ggsave
library(tidyverse)
p <- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
?ggsave
ggsave(filename = "Test.png", plot = p, device = "png")
ggsave(filename = "Test.png", plot = p, device = "png", width = 5, height = 5, units = "in")
ggsave(filename = "Test.png", plot = p, device = "png", width = 1, height = 1, units = "in")
ggsave(filename = "Test.png", plot = p, device = "png", width = 10, height = 10, units = "in")
library(grid)
library(gridExtra)
pgrob <- ggplotGrob(p) %>% grid.force()
pgrob <- ggplotGrob(p) %>% grid.force()
ggsave(filename = "Test2.png", plot = pgrob, device = "png", width = 10, height = 10, units = "in")
setwd("/projects/abeauchamp/Projects/MouseHumanMapping/Paper_Descriptive/Draft/Version4/")
